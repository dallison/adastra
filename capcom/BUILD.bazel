package(default_visibility = ["//visibility:public"])

cc_library(
    name = "capcom_lib",
    srcs = [
        "capcom.cc",
        "client_handler.cc",
        "state_machine.cc",
        "subsystem.cc",
        "umbilical.cc",
    ],
    hdrs = [
        "bitset.h",
        "capcom.h",
        "client_handler.h",
        "subsystem.h",
        "umbilical.h",
    ],
    deps = [
        "//common",
        "//proto:capcom_cc_proto",
        "//proto:config_cc_proto",
        "//proto:event_cc_proto",
        "//proto:log_cc_proto",
        "//proto:stream_cc_proto",
        "//stagezero:symbols_lib",
        "//stagezero/client",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings:str_format",
        "@coroutines//:co",
        "@toolbelt//toolbelt",
    ],
)

cc_binary(
    name = "capcom",
    srcs = [
        "main.cc",
    ],
    copts = [
        # MacOS has deprecated daemon for some reason.
        "-Wno-deprecated-declarations",
    ],
    deps = [
        ":capcom_lib",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
    ],
)

cc_test(
    name = "capcom_test",
    size = "medium",
    srcs = ["capcom_test.cc"],
    data = [
        "//stagezero/zygote:standard_zygote",
        "//testdata:echo",
        "//testdata:files",
        "//testdata:listener.so",
        "//testdata:loop",
        "//testdata:module.so",
        "//testdata:oneshot",
        "//testdata:params",
        "//testdata:talker.so",
        "//testdata:telemetry",
        "//testdata:vars",
        "@subspace//server:subspace_server",
    ],
    deps = [
        ":capcom_lib",
        "//capcom/client",
        "//stagezero:stagezero_lib",
        "//testdata:telemetry_cc_proto",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest",
        "@coroutines//:co",
    ],
)
