load("@davros//davros:davros_library.bzl", "davros_serdes_library", "davros_zeros_library")
load("@phaser//phaser:phaser_library.bzl", "phaser_library")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "module",
    srcs = [
        "module.cc",
    ],
    hdrs = [
        "message.h",
        "module.h",
        "publisher.h",
        "subscriber.h",
    ],
    deps = [
        "//stagezero:symbols_lib",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/debugging:failure_signal_handler",
        "@com_google_absl//absl/debugging:symbolize",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:span",
        "@coroutines//:co",
        "@subspace//client:subspace_client",
        "@toolbelt//toolbelt",
    ],
)

cc_library(
    name = "protobuf_module",
    hdrs = [
        "protobuf_module.h",
    ],
    deps = [
        ":module",
        "@phaser//phaser/runtime:phaser_runtime",
    ],
)

cc_library(
    name = "ros_module",
    hdrs = [
        "ros_module.h",
    ],
    deps = [
        ":module",
        "@davros//davros:serdes_runtime",
        "@davros//davros:zeros_runtime",
    ],
)

cc_library(
    name = "phaser_module",
    hdrs = [
        "phaser_module.h",
    ],
    deps = [
        ":module",
    ],
)

cc_test(
    name = "module_test",
    size = "small",
    srcs = ["module_test.cc"],
    deps = [
        ":protobuf_module",
        ":test_cc_proto",
        ":test_phaser",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest",
        "@coroutines//:co",
        "@subspace//client:subspace_client",
        "@subspace//server",
    ],
)

cc_test(
    name = "ros_test",
    size = "small",
    srcs = ["ros_test.cc"],
    deps = [
        ":ros_module",
        ":test_ros",
        ":test_zeros",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest",
        "@coroutines//:co",
        "@subspace//client:subspace_client",
        "@subspace//server",
    ],
)

cc_test(
    name = "phaser_test",
    size = "small",
    srcs = ["phaser_test.cc"],
    deps = [
        ":phaser_module",
        ":test_phaser",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest",
        "@coroutines//:co",
        "@subspace//client:subspace_client",
        "@subspace//server",
    ],
)
proto_library(
    name = "test_proto",
    srcs = ["testdata/test.proto"],
)

cc_proto_library(
    name = "test_cc_proto",
    deps = [":test_proto"],
)

davros_serdes_library(
    name = "test_ros",
    srcs = [
        "testdata/msg/Test.msg",
    ],
)

davros_zeros_library(
    name = "test_zeros",
    srcs = [
        "testdata/msg/Test.msg",
    ],
    add_namespace = "zeros",
)

phaser_library(
    name = "test_phaser",
    add_namespace = "phaser",
    deps = ["test_proto"],
)

cc_binary(
    name = "test_module.so",
    srcs = [
        "testdata/test_module.cc",
    ],
    linkshared = 1,
    linkstatic = 0,
    deps = [
        ":protobuf_module",
    ],
)
