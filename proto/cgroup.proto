// Copyright 2024 David Allison
// All Rights Reserved
// See LICENSE file for licensing information.

syntax = "proto3";

package adastra.stagezero.config;

enum SubtreeControl {
  SUBTREE_DEFAULT = 0;
  SUBTREE_ENABLE = 1;
  SUBTREE_DISABLE = 2;
}


// Cgroups are supported only on Linux.
// https://docs.kernel.org/admin-guide/cgroup-v2.html
//
// This implements almost all of the V2 cgroup controllers
// in Linux.  The only one missing is the hugetlb controller
// which I don't understand how to configure.
//
// TODO: add hugetlb controller.
//
// In each controller, the 'subtree_control' field specifies whether
// and how the controller name will be written into the cgroup.subtree_control
// file.  If the value is `SUBTREE_DEFAULT`, the controller will not be written
// to the file. If it is `SUBTREE_ENABLE`, the controller will be written to the
// file with a '+' prefix. If it is `SUBTREE_DISABLE`, the controller will be
// written to the file with a '-' prefix.
//
//  See https://www.kernel.org/doc/Documentation/cgroup-v2.txt
// for more information.
message Cgroup {
  enum Type {
    CG_DOMAIN = 0;
    CG_DOMAIN_THREADED = 1;
    CG_THREADED = 2;
  }

  message CpuController {
    optional int32 weight = 1;
    optional int32 weight_nice = 2;
    optional int32 max = 3;
    optional int32 max_burst = 4;
    optional float uclamp_min = 5;
    optional float uclamp_max = 6;
    optional int32 idle = 7;
    SubtreeControl subtree_control = 8;
  }

  message MemoryController {
    optional int64 min = 1;
    optional int64 low = 2;
    optional int64 high = 3;
    optional int64 max = 4;
    optional int32 oom_group = 5;
    optional int64 swap_high = 6;
    optional int64 swap_max = 7;
    optional int64 zswap_max = 9;
    optional int32 zswap_writeback = 10;
    SubtreeControl subtree_control = 11;
  }

  message CpusetController {
    enum Partition {
      P_MEMBER = 0;
      P_ROOT = 1;
      P_ISOLATED = 2;
    }
    optional string cpus = 1;
    optional string mems = 2;
    optional string cpus_exclusive = 3;
    optional Partition partition = 4;
    SubtreeControl subtree_control = 5;
  }

  message IOController {
    optional int32 weight = 1;
    optional string max = 2;
    SubtreeControl subtree_control = 3;
 }

  message PIDController {
    optional int32 max = 1;   // Omitted means "max"
    SubtreeControl subtree_control = 2;
  }

  message RDMAController {
    message Device {
      string name = 1;
      int64 hca_handle = 2;
      optional int64 hca_object = 3;
    }
    repeated Device device = 1;
    SubtreeControl subtree_control = 2;
  }

  Type type = 1;
  string name = 2;
  CpusetController cpuset = 3;
  CpuController cpu = 4;
  MemoryController memory = 5;
  IOController io = 6;
  PIDController pid = 7;
  RDMAController rdma = 8;
}

message CgroupAssignment {
    string compute = 1;
    repeated Cgroup cgroups = 2;
}
