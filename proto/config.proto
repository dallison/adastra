// Copyright 2023 David Allison
// All Rights Reserved
// See LICENSE file for licensing information.

syntax = "proto3";

package stagezero.config;

import "proto/stream.proto";

message Compute {
  string name = 1;
  bytes ip_addr = 2;  // Host byte order.
  int32 port = 3;       // Host byte order.
  bool disabled = 4; 
}

message Variable {
  string name = 1;     // Varible name
  string value = 2;    // Expression for value (use $ for var names)
  bool exported = 3;     // Export to environment.
  bool disabled = 4;
}

message ProcessOptions {
  string name = 1;
  string description = 2;

  repeated config.Variable vars = 3; // Local variables and environment.
  repeated string args = 4;          // Use $var in expressions.

  // Timeouts for shutdown.  The sigint timeout is the number of
  // seconds beteen sending SIGINT and SIGTERM.  -1 means no
  // SIGINT is sent.  Likewise, sigterm timeout is the number of
  // seconds between SIGTERM and SIGKILL.  A value of 0 means
  // use reasonable defaults.Â©57
  int32 sigint_shutdown_timeout_secs = 5;
  int32 sigterm_shutdown_timeout_secs = 6;

  bool notify = 7;      // Notify of startup via pipe.

  // If the process will notify us, we wait this long for it
  // to do so.
  int32 startup_timeout_secs = 8;

  // User and group for owner of the process.
  string user = 9;
  string group = 10;

  // Interactive only makes sense for static processes.
  bool interactive = 11;

  // Interactive terminal parameters.
  stagezero.proto.Terminal interactive_terminal = 12;

  // A critical process is one that is needed for the system to work
  // at all.  They are not subject to restart or abort processing.  If
  // they crash, the whole system is brought down.
  bool critical = 13;

  // A oneshot process is expected to run once and exit.  If it exits with a
  // non-zero status or receives a signal it is considered to be a process
  // failure.
  bool oneshot = 14;
}

message StaticProcess {
  string executable = 1;
}

message VirtualProcess {
  string zygote = 1; // Zygote to use.
  string dso = 2;    // Dynamic shared object to load (empty for none)
  string main_func = 3; // Main function to call.
}
