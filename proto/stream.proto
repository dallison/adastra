syntax = "proto3";

package adastra.stagezero.proto;

// Terminal parameters.  This this is omitted, or the fields are
// omitted (or zero), the same values as the controlling terminal
// for stagezero will be used.  This is only used if tty=true.
message Terminal {
  string name = 1; // Value of TERM environment variable.
  int32 rows = 2;  // Number of rows.
  int32 cols = 3;  // Number of columns.)
};

message StreamControl {
  enum Disposition {
    INVALID = 0;
    STAGEZERO = 1;
    CLIENT = 2;   // Stdout/err as event, stdin as request.
    FILENAME = 3; // To/from file
    FD = 4;       // To/from file descriptor
    CLOSE = 5;    // Close
    NOTIFY = 6;   // Special stream for startup notification
    LOGGER = 7;   // Send to client as log message.
    SYSLOG = 8;   // Send to syslog.
    PARAMETERS_READ = 9; // Read stream for parameters.
    PARAMETERS_WRITE = 10; // Write stream for parameters.
    PARAMETERS_EVENTS = 11; // Stream for parameter events.
    TELEMETRY_READ = 12; // Read stream for telemetry.
    TELEMETRY_WRITE = 13; // Write stream for telemetry.
  };

  // Direction is as seen from the point of view of the process.
  enum Direction {
    DEFAULT = 0; // Default for 0, 1, and 2.  Not valid for others
    INPUT = 1;   // Input stream.
    OUTPUT = 2;  // Output stream.
  };

  int32 stream_fd = 1;         // File descriptor for stream.
  bool tty = 2;                // Is a tty (isatty() = 1)
  Disposition disposition = 3; // Where data goes to or comes from
  Direction direction = 4;     // From the process's point of view.

  oneof data {
    string filename = 5; // File name for FILENAME (use $var for expressions)
    int32 fd = 6;        // File descriptor for FD.
  }
  Terminal terminal = 7; // Terminal info for tty=true
}
